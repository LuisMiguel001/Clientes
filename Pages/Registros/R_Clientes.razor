@page "/Cliente"
@page "/Cliente/{ClienteId:int}"
@inject SistemaBLL SistemaBLL
@inject NotificationService notificationService

<EditForm Model="clienteId" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Clientes y Consulta</h3>
            </div>
            <div class="card-body">
                @*BuscarId*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="cliente.ClienteId" class="form-control" aria-describedby="buscarButton" />
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="buscarButton">
                            <i class="oi oi-magnifying-glass" />
                        </button>
                    </div>
                </div>

                @*ClienteId*@
                <div class="mb-3">
                    <label class="form-label">ClienteId</label>
                    <InputNumber @bind-Value="cliente.ClienteId" class="form-control" />
                    <ValidationMessage For="@(() => cliente.ClienteId)" />
                </div>

                @*Nombre*@
                <div class="mb-3">
                    <label class="form-label">Nombres</label>
                    <InputText @bind-Value="cliente.Nombres" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Nombres)" />
                </div>

                @*Telefono*@
                <div class="mb-3">
                    <label class="form-label">Tel&eacutefono</label>
                    <InputText @bind-Value="cliente.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Telefono)" />
                </div>

                @*Celular*@
                <div class="mb-3">
                    <label class="form-label">Celular</label>
                    <InputText @bind-Value="cliente.Celular" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Celular)" />
                </div>
                
                @*Rnc*@
                <div class="mb-3">
                    <label class="form-label">Rnc</label>
                    <InputText @bind-Value="cliente.Rnc" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Rnc)" />
                </div>

                @*Email*@
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText @bind-Value="cliente.Email" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Email)" />
                </div>
                
                @*Direccion*@
                <div class="mb-3">
                    <label class="form-label">Direcci&oasscuten</label>
                    <InputText @bind-Value="cliente.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Direccion)" />
                </div>

            </div>

            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-primary" @onclick="Nuevo"> <i class="oi oi-file" /> Nuevo</button>
                    <button type="submit" class="btn btn-success"> <i class="oi oi-document" /> Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar</button>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int clienteId { get; set; }
    public Sistema cliente { get; set; } = new Sistema();

    protected override void OnInitialized()
    {
        if (clienteId > 0)
        {
            this.cliente.ClienteId = this.clienteId;
            Buscar();
        }
    }

    public void Buscar()
    {
        var ClienteEncontrada = SistemaBLL.Buscar(cliente.ClienteId);
        if (ClienteEncontrada != null)
        {
            this.cliente = ClienteEncontrada;
        }
        else
        {
            notificationService.ShowNotification(
            titulo: "Error de Busqueda",
            mensaje: "Registro no encontrado",
            NotificationSeverity.Error);

        }
    }
    public void Nuevo()
    {
        this.cliente = new Sistema();
    }

    public void Guardar()
    {
        if (!Validar())
        {
            notificationService.ShowNotification(
                titulo: "Validacion",
                mensaje: "Error, Revise los campos",
                NotificationSeverity.Error);
            return;
        }

        var guardo = SistemaBLL.Guardar(this.cliente);
        if (guardo)
        {
            notificationService.ShowNotification(
                titulo: "Exito",
                mensaje: "Guardo correctamente!",
                NotificationSeverity.Success);
            Nuevo();
        }

        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Ocurrio un error y no fue posible guardad",
                NotificationSeverity.Error);
        }
    }

    public void Eliminar()
    {
        Buscar();
        if (SistemaBLL.Eliminar(this.cliente))
        {
            notificationService.ShowNotification(
                titulo: "Exito",
                mensaje: "Eliminado con Exito!",
                NotificationSeverity.Success);
            Nuevo();
        }
        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Ocurrio un error y no fue posible eliminar",
                NotificationSeverity.Error);
        }
    }

    public bool Validar()
    {
        return true;
    }

}
